//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SELMs.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SELMsContext : DbContext
    {
        public SELMsContext()
            : base("name=SELMsContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Equipment> Equipments { get; set; }
        public virtual DbSet<Equipment_Allocation_Application> Equipment_Allocation_Application { get; set; }
        public virtual DbSet<Equipment_Allocation_Application_Detail> Equipment_Allocation_Application_Detail { get; set; }
        public virtual DbSet<Equipment_Component> Equipment_Component { get; set; }
        public virtual DbSet<Equipment_Handover_Form> Equipment_Handover_Form { get; set; }
        public virtual DbSet<Equipment_Handover_Form_Detail> Equipment_Handover_Form_Detail { get; set; }
        public virtual DbSet<Equipment_Import_Application> Equipment_Import_Application { get; set; }
        public virtual DbSet<Equipment_Import_Application_Detail> Equipment_Import_Application_Detail { get; set; }
        public virtual DbSet<Equipment_Location_History> Equipment_Location_History { get; set; }
        public virtual DbSet<Equipment_Project_History> Equipment_Project_History { get; set; }
        public virtual DbSet<Equipment_Usage_History> Equipment_Usage_History { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<Inventory_Request_Application> Inventory_Request_Application { get; set; }
        public virtual DbSet<Inventory_Request_Application_Detail> Inventory_Request_Application_Detail { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Member_Location_History> Member_Location_History { get; set; }
        public virtual DbSet<Member_Project_History> Member_Project_History { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Project_Investment_Cost_Application> Project_Investment_Cost_Application { get; set; }
        public virtual DbSet<Project_Investment_Cost_Application_Detail> Project_Investment_Cost_Application_Detail { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<Proc_GetAllSubLocationList_Result> Proc_GetAllSubLocationList(string username, Nullable<int> parent_id, string location_name)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var parent_idParameter = parent_id.HasValue ?
                new ObjectParameter("parent_id", parent_id) :
                new ObjectParameter("parent_id", typeof(int));
    
            var location_nameParameter = location_name != null ?
                new ObjectParameter("location_name", location_name) :
                new ObjectParameter("location_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetAllSubLocationList_Result>("Proc_GetAllSubLocationList", usernameParameter, parent_idParameter, location_nameParameter);
        }
    
        public virtual ObjectResult<Proc_GetCategoryList_Result> Proc_GetCategoryList(Nullable<bool> isadmin, string role, string username, string text)
        {
            var isadminParameter = isadmin.HasValue ?
                new ObjectParameter("isadmin", isadmin) :
                new ObjectParameter("isadmin", typeof(bool));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetCategoryList_Result>("Proc_GetCategoryList", isadminParameter, roleParameter, usernameParameter, textParameter);
        }
    
        public virtual ObjectResult<Proc_GetDetailEquipment_Result> Proc_GetDetailEquipment(string system_code)
        {
            var system_codeParameter = system_code != null ?
                new ObjectParameter("system_code", system_code) :
                new ObjectParameter("system_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetDetailEquipment_Result>("Proc_GetDetailEquipment", system_codeParameter);
        }
    
        public virtual ObjectResult<Proc_GetEquipmentsList_Result> Proc_GetEquipmentsList(Nullable<bool> isadmin, string role, string username, string text, string text1, string text2, string categoryCode)
        {
            var isadminParameter = isadmin.HasValue ?
                new ObjectParameter("isadmin", isadmin) :
                new ObjectParameter("isadmin", typeof(bool));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var text1Parameter = text1 != null ?
                new ObjectParameter("text1", text1) :
                new ObjectParameter("text1", typeof(string));
    
            var text2Parameter = text2 != null ?
                new ObjectParameter("text2", text2) :
                new ObjectParameter("text2", typeof(string));
    
            var categoryCodeParameter = categoryCode != null ?
                new ObjectParameter("categoryCode", categoryCode) :
                new ObjectParameter("categoryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetEquipmentsList_Result>("Proc_GetEquipmentsList", isadminParameter, roleParameter, usernameParameter, textParameter, text1Parameter, text2Parameter, categoryCodeParameter);
        }
    
        public virtual ObjectResult<Proc_GetGetListComponentEquips_Result> Proc_GetGetListComponentEquips(string system_code)
        {
            var system_codeParameter = system_code != null ?
                new ObjectParameter("system_code", system_code) :
                new ObjectParameter("system_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetGetListComponentEquips_Result>("Proc_GetGetListComponentEquips", system_codeParameter);
        }
    
        public virtual ObjectResult<Proc_GetListEquipInLocation_Result> Proc_GetListEquipInLocation(Nullable<int> location_id)
        {
            var location_idParameter = location_id.HasValue ?
                new ObjectParameter("location_id", location_id) :
                new ObjectParameter("location_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetListEquipInLocation_Result>("Proc_GetListEquipInLocation", location_idParameter);
        }
    
        public virtual ObjectResult<Proc_GetListProjectInLocation_Result> Proc_GetListProjectInLocation(Nullable<int> location_id)
        {
            var location_idParameter = location_id.HasValue ?
                new ObjectParameter("location_id", location_id) :
                new ObjectParameter("location_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetListProjectInLocation_Result>("Proc_GetListProjectInLocation", location_idParameter);
        }
    
        public virtual ObjectResult<Proc_GetLocationList_Result> Proc_GetLocationList(string username, Nullable<int> parent_id, string location_name)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var parent_idParameter = parent_id.HasValue ?
                new ObjectParameter("parent_id", parent_id) :
                new ObjectParameter("parent_id", typeof(int));
    
            var location_nameParameter = location_name != null ?
                new ObjectParameter("location_name", location_name) :
                new ObjectParameter("location_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetLocationList_Result>("Proc_GetLocationList", usernameParameter, parent_idParameter, location_nameParameter);
        }
    
        public virtual ObjectResult<Proc_GetMembersList_Result> Proc_GetMembersList(Nullable<bool> isadmin, string role, string username, string text)
        {
            var isadminParameter = isadmin.HasValue ?
                new ObjectParameter("isadmin", isadmin) :
                new ObjectParameter("isadmin", typeof(bool));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetMembersList_Result>("Proc_GetMembersList", isadminParameter, roleParameter, usernameParameter, textParameter);
        }
    
        public virtual ObjectResult<Proc_GetRolesList_Result> Proc_GetRolesList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetRolesList_Result>("Proc_GetRolesList");
        }
    }
}
